Meeting Date: 2022-04-26
Minutes taken by: Tomas
Attendees:
    Matthias St. Pierre
    Matt Caswell
    Nicola Tuveri
    Richard Levitte
    Tomas Mraz
    Shane Lontis
    Paul Dale
    Tim Hudson
    Dmitry Belyavskiy
External attendees:
    Hugo Landau
    Martin Koci

Agenda:

    * Nominate a minute taker and confirm agenda
    * Agree minutes from previous meeting
    * Review outstanding actions
    * Branch policy
    * Release requirements policy
    * Review issues with OTC hold (30 minutes)
    * Datagram API
    * Review draft technical policies
    * Allocation of tasks to contractors
    * Agree agenda for next meeting
    * AOB

** Nominate a minute taker and confirm agenda

Pauli volunteered to take the minutes.
Proposed: Matt, seconded: Tim

Agenda for the meeting agreed. Proposed: Tim, seconded: Matt

** Agree minutes from previous meeting

Last week minutes were approved.
Proposed: Pauli, seconded: Tomas, Nicola

** Review outstanding actions

AI: Update the QUIC API proposal with approach to solving the 5 problems
(1) timer based events (2) TCP vs UDP socket creation (3) blocking (4) no visible
event capability for existing apps (5) configure protocol via a string.

In progress


AI: Separate out in the API proposal the subset we will implement for MVP.

In progress


AI: All to re-read the branch policy proposal.

Done


AI: Everyone to read the API diffs

Done


AI: Dmitry to properly record the vote in openssl/technical-policies#44

Not started


AI: Matt and Hugo to synthesize the API proposal and the diffs into a single PR

In progress


AI: Shane to look at the PKEY check documentation in providers' docs.

In progress


AI: Tomas to start the vote on Coding style adjustments when it is ready for
vote.

Done


AI: All to read the Release Requirements policy proposal. 
    https://github.com/openssl/technical-policies/pull/40

Done (maybe)


AI: Nicola to rebase the PR#16340 for making the pyca tests run against the
1.1.1 branch.

Done


** Branch policy

Discussions ensue.  Concerns about the _future_ branches and their
distinction from master.  Is the future major the same as master?
We don't want to change the default branch.  We need to figure out where
to put PRs -- i.e. which releases should a PR go in.

There is lots of potential for mess and confusion here.  We need to
figure out how many branches we're going to have in order to determine
the likely effort required.

Should we add something about the `default' branch and clarify the
workflows.  Keep master as the most advanced?  Drop master completely?
Keep master as the future major?  Default branch only contains a README
saying to pick a different branch.


** Release requirements policy

Looking good, seemingly not quite ready to vote.  Some discussion about
regressions stopping release.  Need to classify that regressions are
issues that have been triaged.

[Tim departs]

When should the policy criteria be checked for point releases?  Beta and
final are covered by OTC votes.  This is separate from a no-go decision.

Proposal: criteria checked on freeze.  No-go: day of release.  This will
require rewording the freeze period to not be one of the criteria.

During a freeze period, we need some rules limiting what can be merged.
Who makes the choice?

Proposal: announce seven days ahead (Tuesday), freeze four days out
(Friday).  No-go call on Tuesday, release Tuesday afternoon.  After freeze
only merge things which help achieve the release criteria.  A no-go call
will keep the repository frozen by default.

[Matt departs]


** Review issues with OTC hold (30 minutes)

#18194: AES-128-SHA tls1 still work at SECLEVEL=1

    This is a bug in the CHANGES.md and NEWS.md files in 3.0.

    Disallow these versions in master as security levels greater than zero.

#18195: EVP: Make sure Ed signature is called without digest

    We only implement pure EDDSA but an external provider could allow
    a pre-hash variant.  The external provider would need to define a
    parameter to enable this behaviour.  Concerns raised about always
    disallowing the digest causing future problems.

    This shouldn't be in master either.  Any error should be raised at
    higher level.


** Datagram API

AI: OTC read [Datagrapm API] document.

    Quick run through by Hugo.

[Datagram API]: https://tinyurl.com/5n7fmkpe


** Review draft technical policies

Skipped


** Allocation of tasks to contractors

Martin does this now, removing from future agendas.


** Agree agenda for next meeting

    * Nominate a minute taker and confirm agenda
    * Agree minutes from previous meeting
    * Review outstanding actions
    * Release requirements policy
    * Branch policy
    * Datagram API
    * Error suppressing in OpenSSL
    * Review issues with OTC hold (30 minutes)
    * Review draft technical policies
    * Agree agenda for next meeting
    * AOB


** AOB

    Are PGP signatures of tar balls worthwhile?
        Yes

    What requirements on the release signatures are required?
    Specifically, is a key equivalent to a self signed certificate okay?
        Since the previous release includes the signature's for
        future releases this is okay.

    We should document the process we use for signing releases.

[Nicola departs]

    We ought to cross sign each other's keys.  We should also do this
    with the project's key which needs renewing.


** New and carried over action items [transported from above]:

AI: Dmitry to write requirements for the error suppression agenda item.

AI: Update the QUIC API proposal with approach to solving the 5 problems
(1) timer based events (2) TCP vs UDP socket creation (3) blocking (4) no visible
event capability for existing apps (5) configure protocol via a string.

AI: Separate out in the API proposal the subset we will implement for MVP.

AI: Dmitry to properly record the vote in openssl/technical-policies#44

AI: Matt and Hugo to synthesize the API proposal and the diffs into a single PR

AI: Shane to look at the PKEY check documentation in providers' docs.
